{"version":3,"sources":["app/reducer.js","app/store.js","app/actions.js","TodoList.js","AddTodo.js","Tasks.js","TodoApp.js","reportWebVitals.js","index.js"],"names":["uniqueId","Math","random","toString","substr","initialState","text","id","checked","store","createStore","state","action","type","payload","map","item","filter","composeWithDevTools","addTodo","toggleTodo","removeTodo","TodoList","todoList","getState","className","todo","onClick","dispatch","AddTodo","useState","addValue","setAddValue","addTodoItem","length","onSubmit","e","preventDefault","onChange","target","value","Tasks","TodoApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"2OAAMA,EAAW,iBAAM,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAG5DC,EAAe,CACjB,CACIC,KAAM,cACNC,GAAIP,IACJQ,SAAS,GAEb,CACIF,KAAM,gBACNC,GAAIP,IACJQ,SAAS,GAEb,CACIF,KAAM,cACNC,GAAIP,IACJQ,SAAS,I,WCXFC,EADDC,uBDgBC,WAAiD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAC3D,OAAQA,EAAOC,MACX,IAAK,WACD,MAAM,CACD,CACGP,KAAMM,EAAOE,QACbP,GAAGP,IACHQ,SAAQ,IAJhB,mBAMOG,IAGX,IAAK,cACD,OAAOA,EAAMI,KAAI,SAAAC,GAAI,OAAIA,EAAKT,KAAOK,EAAOE,QAAnB,2BACLE,GADK,IACCR,SAAUQ,EAAKR,UAAUQ,KACvD,IAAK,cACD,OAAOL,EAAMM,QAAO,SAAAD,GAAI,OAAIA,EAAKT,KAAOK,EAAOE,WAEnD,QACI,OAAOH,KCnCgBO,iCCL7BC,EAAU,CAAEN,KAAM,YAClBO,EAAa,CAAEP,KAAM,eACrBQ,EAAa,CAAER,KAAM,e,OC+BZS,EA9BE,WACb,IAAMC,EAAWd,EAAMe,WAEvB,OACI,qBAAKC,UAAY,mBAAjB,SACKF,EAASR,KAAI,SAAAW,GAAI,OACd,sBACID,UAAU,eADd,UAGI,qBACIA,UAAS,4BAAuBC,EAAKlB,QAAU,UAAY,IAC3DmB,QAAY,kBAAMlB,EAAMmB,SAAN,2BAAmBR,GAAnB,IAA+BN,QAASY,EAAKnB,SAEnE,qBACIkB,UAAS,oBAAeC,EAAKlB,QAAU,oBAAsB,IADjE,SAGKkB,EAAKpB,OAEV,qBACImB,UAAY,aACZE,QAAY,kBAAMlB,EAAMmB,SAAN,2BAAmBP,GAAnB,IAA+BP,QAASY,EAAKnB,OAFnE,iBAZMmB,EAAKnB,U,gBCehBsB,EApBC,WACZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAc,WACZF,EAASG,SACbzB,EAAMmB,SAAN,2BAAmBT,GAAnB,IAA4BL,QAASiB,KACrCC,EAAY,MAMhB,OACI,uBAAMP,UAAY,mBAClBU,SANiB,SAACC,GAClBA,EAAEC,iBACFJ,KAGA,UAEI,uBAAOK,SAAY,SAACF,GAAD,OAAOJ,EAAYI,EAAEG,OAAOC,QAAQA,MAAST,IAChE,wBAAQJ,QAAWM,EAAnB,qBCVGQ,EATD,WACV,OACI,sBAAKhB,UAAY,eAAjB,UACI,sBAAMA,UAAY,OAAlB,mBACA,sBAAMA,UAAY,kBCcfiB,EAVC,WACZ,OACI,sBAAKjB,UAAY,YAAjB,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCDOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAS,WACbC,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,UAI5BJ,IACA3C,EAAMgD,UAAUL,GAQhBT,M","file":"static/js/main.e9b9cab4.chunk.js","sourcesContent":["const uniqueId = () => '_' + Math.random().toString(36).substr(2, 9);\r\n\r\n\r\nconst initialState = [\r\n    {\r\n        text: \"Learn Redux\",\r\n        id: uniqueId(),\r\n        checked: false,\r\n    },\r\n    {\r\n        text: \"Learn Context\",\r\n        id: uniqueId(),\r\n        checked: false,\r\n    },\r\n    {\r\n        text: \"Learn Hooks\",\r\n        id: uniqueId(),\r\n        checked: false,\r\n    }\r\n]\r\n\r\nexport default function reducer (state = initialState, action) {\r\n    switch( action.type ){\r\n        case \"ADD_TODO\":\r\n            return [\r\n                 {\r\n                    text: action.payload,\r\n                    id:uniqueId(),\r\n                    checked:false,\r\n                  } ,\r\n                ...state,\r\n                              \r\n            ];\r\n        case \"TOGGLE_TODO\":\r\n            return state.map(item => item.id === action.payload? \r\n                            {...item, checked: !item.checked}: item );\r\n        case \"REMOVE_TODO\":\r\n            return state.filter(item => item.id !== action.payload );\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\nexport default store;\r\n","const addTodo = { type: \"ADD_TODO\" };\r\nconst toggleTodo = { type: \"TOGGLE_TODO\" };\r\nconst removeTodo = { type: \"REMOVE_TODO\" };\r\n\r\nexport {\r\n    addTodo,\r\n    toggleTodo,\r\n    removeTodo,\r\n}","import store from './app/store';\r\nimport { toggleTodo, removeTodo } from './app/actions'\r\n\r\nconst TodoList = () => {\r\n    const todoList = store.getState();\r\n\r\n    return (\r\n        <div className = \"todoList-wrapper\">\r\n            {todoList.map(todo =>\r\n                <div key={todo.id}\r\n                    className=\"todo-wrapper\"\r\n                >\r\n                    <div\r\n                        className={`checkmark-wrapper ${todo.checked ? \"checked\" : \"\"}`}\r\n                        onClick = { () => store.dispatch({...toggleTodo, payload: todo.id})}\r\n                        ></div>\r\n                    <div \r\n                        className={`todo-text ${todo.checked ? \"todo-text-checked\" : \"\"}`}\r\n                    >\r\n                        {todo.text}\r\n                    </div>\r\n                    <div \r\n                        className = \"remove-btn\"\r\n                        onClick = { () => store.dispatch({...removeTodo, payload: todo.id})}\r\n                    >\r\n                       x\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import {addTodo} from './app/actions';\r\nimport store from './app/store';\r\nimport { useState } from 'react';\r\n\r\nconst AddTodo = () => {\r\n    const [addValue, setAddValue] = useState(\"\");\r\n    const addTodoItem = () => {\r\n        if(!addValue.length) return;\r\n        store.dispatch({...addTodo, payload: addValue});\r\n        setAddValue(\"\")\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTodoItem();\r\n    }\r\n    return ( \r\n        <form className = \"add-todo-wrapper\"\r\n        onSubmit = {handleSubmit}>\r\n            <input onChange = {(e) => setAddValue(e.target.value)} value = {addValue}></input>\r\n            <button onClick = {addTodoItem}>Add</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default AddTodo;","const Tasks = () => {\r\n    return (\r\n        <div className = \"task-wrapper\">\r\n            <span className = \"task\">Tasks</span>\r\n            <span className = \"icon-menu\"></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import TodoList from './TodoList';\nimport './TodoApp.css';\nimport './AddTodo';\nimport AddTodo from './AddTodo';\nimport Tasks from './Tasks';\n\n\n\nconst TodoApp = () => {\n    return(\n        <div className = \"container\">\n        <Tasks />\n        <TodoList />\n        <AddTodo />\n        </div>\n    )\n}\n\nexport default TodoApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoApp from './TodoApp';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <TodoApp />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender();\nstore.subscribe(render);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}